name: Checks then build and push

on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  backend-checks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install uv
      uses: astral-sh/setup-uv@v5

    - name: Install dependencies
      run: |
        cd backend
        make install-dev

    - name: Run checks
      run: |
        cd backend
        uv run make checks

  frontend-checks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd frontend
        npm install

    - name: Run checks
      run: |
        cd frontend
        make lint

  build_and_push:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [backend-checks, frontend-checks]

    steps:
      - uses: actions/checkout@v4

      - name: DockerHub Login
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract tag name
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v2
        with:
          context: frontend
          file: ./frontend/docker/Dockerfile
          push: true
          tags: anssi/eurydice-frontend:${{ env.TAG_NAME }}
          target: prod
          build-args: |
            EURYDICE_VERSION=${{ env.TAG_NAME }}

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v2
        with:
          context: backend
          file: ./backend/docker/Dockerfile
          push: true
          tags: anssi/eurydice-backend:${{ env.TAG_NAME }}
          target: prod
          build-args: |
            EURYDICE_VERSION=${{ env.TAG_NAME }}
